[project]
name = "alfred"
version = "v2024.07.1"
description = "Default template for PDM package"
authors = [{ name = "Melissa NuÃ±o", email = "melissa@dangle.dev" }]
requires-python = ">=3.12"
readme = "README.md"
license = { text = "MIT" }
dependencies = [
    "py-cord[speed,voice]>=2.6.0",
    "openai>=1.36.0",
    "python-dotenv>=1.0.1",
    "structlog>=24.4.0",
    "aiohttp[speedups]>=3.9.5",
]

[project.entry-points."alfred.features"]
"Bot Admin" = "alfred.features.admin"
"DALL-E" = "alfred.features.dalle"
"ChatGPT" = "alfred.features.chatgpt"

[project.scripts]
alfred = "alfred.cli:run"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401",
    "BLE001",
    "D107",
    "D203",
    "D213",
    "EM101",
    "EM102",
    "FIX002",
    "G004",
    "PLR0911",
    "PYI034",
    "TCH004",
    "TD002",
    "TD003",
    "TRY003",
    "TRY400",
]

[tool.ruff.lint.pylint]
max-args = 7

[tool.ruff]
line-length = 100

[tool.mypy]
disable_error_code = ["valid-type"]

[[tool.mypy.overrides]]
module = ["aiohttp.*", "discord.*", "structlog.*", "openai.*", "dotenv.*"]
ignore_missing_imports = true

[tool.pdm]
distribution = true

[tool.pdm.dev-dependencies]
test = ["pytest>=8.2.2"]
dev = [
    "bpython>=0.24",
    "mypy>=1.10.1",
    "pyment>=0.3.3",
    "ruff>=0.5.0",
    "sphinx>=7.4.7",
    "sphinx-rtd-theme>=2.0.0",
    "isort>=5.13.2",
    "black>=24.4.2",
]

[tool.pdm.scripts]
pre_start = { shell = "bash -c '{pdm} install &> /dev/null'" }
start = { cmd = "alfred", env_file = ".env" }
pre_debug = { shell = "bash -c '{pdm} install &> /dev/null'" }
debug = { cmd = "alfred", env = { LOG_LEVEL = "DEBUG" }, env_file = ".env" }
pre_pdb = { shell = "bash -c '{pdm} install &> /dev/null'" }
pdb = { cmd = "python -m pdb src/alfred/cli.py", env_file = ".env" }

lint = "make lint"
check-static = "make static-analysis"
check-format = "make check-formatting"
format = "make format"
test = { shell = "make run-unit-tests" }

extract-strings = "make extract-strings"
new-translation = "make new-translation LOCALE=\"{args}\""
update-translations = "make update-translations"
export-translations = "make export-translations"
check-translations = "make check-translations"

update-doc-stubs = "make update-doc-stubs"
generate-docs = "make generate-docs"
check-docs = "make check-docs"

release = "make release"

check.composite = [
    "{pdm} check-format",
    "{pdm} lint",
    "{pdm} check-static",
    "{pdm} test",
    "{pdm} check-docs",
]
