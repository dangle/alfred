[project]
name = "alfred"
dynamic = ["version"]
description = "Default template for PDM package"
authors = [{ name = "Melissa NuÃ±o", email = "melissa@dangle.dev" }]
dependencies = [
    "py-cord[speed,voice]>=2.6.0",
    "openai>=1.35.13",
    "python-dotenv>=1.0.1",
    "structlog>=24.2.0",
    "aiohttp[speedups]>=3.9.5",
    "dunamai>=1.21.2",
]
requires-python = ">=3.12"
readme = "README.md"
license = { text = "MIT" }

[project.entry-points."alfred.features"]
"Bot Admin" = "alfred.features.admin"
"DALL-E" = "alfred.features.dalle"
"ChatGPT" = "alfred.features.chatgpt"

[project.scripts]
alfred = "alfred.cli:run"

[tool.black]
line-length = 100

[tool.isort]
profile = "black"
line_length = 100

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401",
    "BLE001",
    "D107",
    "D203",
    "D213",
    "EM101",
    "EM102",
    "FIX002",
    "G004",
    "PLR0911",
    "PYI034",
    "TCH004",
    "TD002",
    "TD003",
    "TRY003",
    "TRY400",
]

[tool.ruff.lint.pylint]
max-args = 7

[tool.ruff]
line-length = 100

[tool.mypy]
disable_error_code = ["valid-type"]

[[tool.mypy.overrides]]
module = ["aiohttp.*", "discord.*", "structlog.*", "openai.*", "dotenv.*"]
ignore_missing_imports = true

[tool.pdm]
distribution = true
[tool.pdm.dev-dependencies]
test = ["pytest>=8.2.2"]
dev = [
    "bpython>=0.24",
    "mypy>=1.10.1",
    "pyment>=0.3.3",
    "ruff>=0.5.0",
    "sphinx>=7.3.7",
    "sphinx-rtd-theme>=2.0.0",
    "isort>=5.13.2",
]

[tool.pdm.scripts]
lint.composite = ["ruff check src/ tests/", "mypy src/ tests/"]
pre_start = { shell = "bash -c '{pdm} install &> /dev/null'" }
start = { cmd = "alfred", env_file = ".env" }
pre_debug = { shell = "bash -c '{pdm} install &> /dev/null'" }
debug = { cmd = "alfred", env = { LOG_LEVEL = "DEBUG" }, env_file = ".env" }
pre_pdb = { shell = "bash -c '{pdm} install &> /dev/null'" }
pdb = { cmd = "python -m pdb src/alfred/cli.py", env_file = ".env" }
test = "pytest -vvra"
extract-strings = { shell = "mkdir locales 2>/dev/null ; find src/ -iname '*.py' | xargs xgettext --force-po -d alfred -o locales/alfred.pot --from-code UTF-8" }
new-translation = { shell = "bash -c 'locale=\"{args}\" ; mkdir -p locales/\"${locale:0:2}\"/LC_MESSAGES ; msginit -l \"${locale}\" -o locales/${locale:0:2}/LC_MESSAGES/alfred.po -i locales/alfred.pot --no-translator'" }
pre_update-translations = "{pdm} extract-strings"
update-translations = { shell = "bash -c 'for d in locales/*/; do msgmerge --update \"${d}\"LC_MESSAGES/alfred.po locales/alfred.pot; rm \"${d}\"LC_MESSAGES/alfred.po~ ; done'" }
export-translations = { shell = "bash -c 'for d in locales/*/; do msgfmt --check -o \"${d}\"LC_MESSAGES/alfred.mo \"${d}\"LC_MESSAGES/alfred; done'" }
update-doc-stubs = "sphinx-apidoc -f -o docs/source src/alfred"
pre_gen-docs = "{pdm} update-doc-stubs"
gen-docs = "make -C docs clean html"
format = "black src/alfred"
