[project]
name = "alfred"
version = "0.1.0"
description = "Default template for PDM package"
authors = [{ name = "Melissa NuÃ±o", email = "melissa@dangle.dev" }]
dependencies = [
    "py-cord[speed,voice]>=2.5.0",
    "openai>=1.35.10",
    "python-dotenv>=1.0.1",
    "structlog>=24.2.0",
    "aiohttp[speedups]>=3.9.5",
]
requires-python = ">=3.12"
readme = "README.md"
license = { text = "MIT" }

[tool.pdm.dev-dependencies]
test = ["pytest>=8.2.2"]
dev = ["bpython>=0.24", "mypy>=1.10.1", "pyment>=0.3.3", "ruff>=0.5.0"]

[tool.pdm.scripts]
lint.composite = ["ruff check src/ tests/", "mypy src/ tests/"]
pre_start = { shell = "bash -c '{pdm} install &> /dev/null'" }
start = { cmd = "alfred", env_file = ".env" }
pre_start-pretty = { shell = "bash -c '{pdm} install &> /dev/null'" }
start-pretty = { cmd = "bash -c 'alfred |& jq {args}'", env_file = ".env" }
pre_debug = { shell = "bash -c '{pdm} install &> /dev/null'" }
debug = { cmd = "alfred", env = { LOG_LEVEL = "DEBUG" }, env_file = ".env" }
pdb = { cmd = "python -m pdb src/alfred/main.py", env_file = ".env" }
test = "pytest -vvra"
extract-strings = { shell = "mkdir locales 2>/dev/null ; find src/ -iname '*.py' | xargs xgettext -d alfred -o locales/alfred.pot --from-code UTF-8" }
new-translation = { shell = "bash -c 'locale=\"{args}\" ; mkdir -p locales/\"${locale:0:2}\"/LC_MESSAGES ; msginit -l \"${locale}\" -o locales/${locale:0:2}/LC_MESSAGES/alfred.po -i locales/alfred.pot --no-translator'" }
pre_update-translations = "{pdm} extract-strings"
update-translations = { shell = "bash -c 'for d in locales/*/; do msgmerge --update \"${d}\"LC_MESSAGES/alfred.po locales/alfred.pot; done'" }
export-translations = { shell = "bash -c 'for d in locales/*/; do msgfmt -o \"${d}\"LC_MESSAGES/alfred.mo \"${d}\"LC_MESSAGES/alfred; done'" }

[project.entry-points."alfred.features"]
"Bot Admin" = "alfred.features.admin"
"DALL-E" = "alfred.features.dalle"
"ChatGPT" = "alfred.features.chatgpt"

[project.scripts]
alfred = "alfred.cli:run"

[tool.pdm]
distribution = true

[tool.mypy]
disable_error_code = ["valid-type"]

[[tool.mypy.overrides]]
module = ["aiohttp.*", "discord.*", "structlog.*", "openai.*", "dotenv.*"]
ignore_missing_imports = true
